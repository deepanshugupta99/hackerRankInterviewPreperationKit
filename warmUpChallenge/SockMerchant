//In this code we have to count the total number of paired socks and we have 
//1<=n<=100
//1<=ar[i]<=100 where 0<i<n

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the sockMerchant function below.
    static int sockMerchant(int n, int[] ar) {
        int resultPair=0;
        for(int i=0;i<n;i++)
        {
            if(ar[i]==0)
            {

            }
            else
            {
                for(int j=i+1;j<n;j++)
                {
                    if(ar[i]==ar[j] && ar[j]!=0)
                    {
                        resultPair++;
                        ar[j]=0;
                        ar[i]=0;
                        break;
                    }
                }
            }
        }
        return resultPair;    
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] ar = new int[n];

        String[] arItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arItem = Integer.parseInt(arItems[i]);
            ar[i] = arItem;
        }

        int result = sockMerchant(n, ar);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
